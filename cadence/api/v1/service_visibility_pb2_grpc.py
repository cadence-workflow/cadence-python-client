# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc
import warnings

from cadence.api.v1 import service_visibility_pb2 as cadence_dot_api_dot_v1_dot_service__visibility__pb2

GRPC_GENERATED_VERSION = '1.71.2'
GRPC_VERSION = grpc.__version__
_version_not_supported = False

try:
    from grpc._utilities import first_version_is_lower
    _version_not_supported = first_version_is_lower(GRPC_VERSION, GRPC_GENERATED_VERSION)
except ImportError:
    _version_not_supported = True

if _version_not_supported:
    raise RuntimeError(
        f'The grpc package installed is at version {GRPC_VERSION},'
        + f' but the generated code in cadence/api/v1/service_visibility_pb2_grpc.py depends on'
        + f' grpcio>={GRPC_GENERATED_VERSION}.'
        + f' Please upgrade your grpc module to grpcio>={GRPC_GENERATED_VERSION}'
        + f' or downgrade your generated code using grpcio-tools<={GRPC_VERSION}.'
    )


class VisibilityAPIStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.ListWorkflowExecutions = channel.unary_unary(
                '/uber.cadence.api.v1.VisibilityAPI/ListWorkflowExecutions',
                request_serializer=cadence_dot_api_dot_v1_dot_service__visibility__pb2.ListWorkflowExecutionsRequest.SerializeToString,
                response_deserializer=cadence_dot_api_dot_v1_dot_service__visibility__pb2.ListWorkflowExecutionsResponse.FromString,
                _registered_method=True)
        self.ListOpenWorkflowExecutions = channel.unary_unary(
                '/uber.cadence.api.v1.VisibilityAPI/ListOpenWorkflowExecutions',
                request_serializer=cadence_dot_api_dot_v1_dot_service__visibility__pb2.ListOpenWorkflowExecutionsRequest.SerializeToString,
                response_deserializer=cadence_dot_api_dot_v1_dot_service__visibility__pb2.ListOpenWorkflowExecutionsResponse.FromString,
                _registered_method=True)
        self.ListClosedWorkflowExecutions = channel.unary_unary(
                '/uber.cadence.api.v1.VisibilityAPI/ListClosedWorkflowExecutions',
                request_serializer=cadence_dot_api_dot_v1_dot_service__visibility__pb2.ListClosedWorkflowExecutionsRequest.SerializeToString,
                response_deserializer=cadence_dot_api_dot_v1_dot_service__visibility__pb2.ListClosedWorkflowExecutionsResponse.FromString,
                _registered_method=True)
        self.ListArchivedWorkflowExecutions = channel.unary_unary(
                '/uber.cadence.api.v1.VisibilityAPI/ListArchivedWorkflowExecutions',
                request_serializer=cadence_dot_api_dot_v1_dot_service__visibility__pb2.ListArchivedWorkflowExecutionsRequest.SerializeToString,
                response_deserializer=cadence_dot_api_dot_v1_dot_service__visibility__pb2.ListArchivedWorkflowExecutionsResponse.FromString,
                _registered_method=True)
        self.ScanWorkflowExecutions = channel.unary_unary(
                '/uber.cadence.api.v1.VisibilityAPI/ScanWorkflowExecutions',
                request_serializer=cadence_dot_api_dot_v1_dot_service__visibility__pb2.ScanWorkflowExecutionsRequest.SerializeToString,
                response_deserializer=cadence_dot_api_dot_v1_dot_service__visibility__pb2.ScanWorkflowExecutionsResponse.FromString,
                _registered_method=True)
        self.CountWorkflowExecutions = channel.unary_unary(
                '/uber.cadence.api.v1.VisibilityAPI/CountWorkflowExecutions',
                request_serializer=cadence_dot_api_dot_v1_dot_service__visibility__pb2.CountWorkflowExecutionsRequest.SerializeToString,
                response_deserializer=cadence_dot_api_dot_v1_dot_service__visibility__pb2.CountWorkflowExecutionsResponse.FromString,
                _registered_method=True)
        self.GetSearchAttributes = channel.unary_unary(
                '/uber.cadence.api.v1.VisibilityAPI/GetSearchAttributes',
                request_serializer=cadence_dot_api_dot_v1_dot_service__visibility__pb2.GetSearchAttributesRequest.SerializeToString,
                response_deserializer=cadence_dot_api_dot_v1_dot_service__visibility__pb2.GetSearchAttributesResponse.FromString,
                _registered_method=True)


class VisibilityAPIServicer(object):
    """Missing associated documentation comment in .proto file."""

    def ListWorkflowExecutions(self, request, context):
        """ListWorkflowExecutions is a visibility API to list workflow executions in a specific domain.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListOpenWorkflowExecutions(self, request, context):
        """ListOpenWorkflowExecutions is a visibility API to list the open executions in a specific domain.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListClosedWorkflowExecutions(self, request, context):
        """ListClosedWorkflowExecutions is a visibility API to list the closed executions in a specific domain.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListArchivedWorkflowExecutions(self, request, context):
        """ListArchivedWorkflowExecutions is a visibility API to list archived workflow executions in a specific domain.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ScanWorkflowExecutions(self, request, context):
        """ScanWorkflowExecutions is a visibility API to list large amount of workflow executions in a specific domain without order.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CountWorkflowExecutions(self, request, context):
        """CountWorkflowExecutions is a visibility API to count of workflow executions in a specific domain.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetSearchAttributes(self, request, context):
        """GetSearchAttributes is a visibility API to get all legal keys that could be used in list APIs.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_VisibilityAPIServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'ListWorkflowExecutions': grpc.unary_unary_rpc_method_handler(
                    servicer.ListWorkflowExecutions,
                    request_deserializer=cadence_dot_api_dot_v1_dot_service__visibility__pb2.ListWorkflowExecutionsRequest.FromString,
                    response_serializer=cadence_dot_api_dot_v1_dot_service__visibility__pb2.ListWorkflowExecutionsResponse.SerializeToString,
            ),
            'ListOpenWorkflowExecutions': grpc.unary_unary_rpc_method_handler(
                    servicer.ListOpenWorkflowExecutions,
                    request_deserializer=cadence_dot_api_dot_v1_dot_service__visibility__pb2.ListOpenWorkflowExecutionsRequest.FromString,
                    response_serializer=cadence_dot_api_dot_v1_dot_service__visibility__pb2.ListOpenWorkflowExecutionsResponse.SerializeToString,
            ),
            'ListClosedWorkflowExecutions': grpc.unary_unary_rpc_method_handler(
                    servicer.ListClosedWorkflowExecutions,
                    request_deserializer=cadence_dot_api_dot_v1_dot_service__visibility__pb2.ListClosedWorkflowExecutionsRequest.FromString,
                    response_serializer=cadence_dot_api_dot_v1_dot_service__visibility__pb2.ListClosedWorkflowExecutionsResponse.SerializeToString,
            ),
            'ListArchivedWorkflowExecutions': grpc.unary_unary_rpc_method_handler(
                    servicer.ListArchivedWorkflowExecutions,
                    request_deserializer=cadence_dot_api_dot_v1_dot_service__visibility__pb2.ListArchivedWorkflowExecutionsRequest.FromString,
                    response_serializer=cadence_dot_api_dot_v1_dot_service__visibility__pb2.ListArchivedWorkflowExecutionsResponse.SerializeToString,
            ),
            'ScanWorkflowExecutions': grpc.unary_unary_rpc_method_handler(
                    servicer.ScanWorkflowExecutions,
                    request_deserializer=cadence_dot_api_dot_v1_dot_service__visibility__pb2.ScanWorkflowExecutionsRequest.FromString,
                    response_serializer=cadence_dot_api_dot_v1_dot_service__visibility__pb2.ScanWorkflowExecutionsResponse.SerializeToString,
            ),
            'CountWorkflowExecutions': grpc.unary_unary_rpc_method_handler(
                    servicer.CountWorkflowExecutions,
                    request_deserializer=cadence_dot_api_dot_v1_dot_service__visibility__pb2.CountWorkflowExecutionsRequest.FromString,
                    response_serializer=cadence_dot_api_dot_v1_dot_service__visibility__pb2.CountWorkflowExecutionsResponse.SerializeToString,
            ),
            'GetSearchAttributes': grpc.unary_unary_rpc_method_handler(
                    servicer.GetSearchAttributes,
                    request_deserializer=cadence_dot_api_dot_v1_dot_service__visibility__pb2.GetSearchAttributesRequest.FromString,
                    response_serializer=cadence_dot_api_dot_v1_dot_service__visibility__pb2.GetSearchAttributesResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'uber.cadence.api.v1.VisibilityAPI', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
    server.add_registered_method_handlers('uber.cadence.api.v1.VisibilityAPI', rpc_method_handlers)


 # This class is part of an EXPERIMENTAL API.
class VisibilityAPI(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def ListWorkflowExecutions(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/uber.cadence.api.v1.VisibilityAPI/ListWorkflowExecutions',
            cadence_dot_api_dot_v1_dot_service__visibility__pb2.ListWorkflowExecutionsRequest.SerializeToString,
            cadence_dot_api_dot_v1_dot_service__visibility__pb2.ListWorkflowExecutionsResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def ListOpenWorkflowExecutions(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/uber.cadence.api.v1.VisibilityAPI/ListOpenWorkflowExecutions',
            cadence_dot_api_dot_v1_dot_service__visibility__pb2.ListOpenWorkflowExecutionsRequest.SerializeToString,
            cadence_dot_api_dot_v1_dot_service__visibility__pb2.ListOpenWorkflowExecutionsResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def ListClosedWorkflowExecutions(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/uber.cadence.api.v1.VisibilityAPI/ListClosedWorkflowExecutions',
            cadence_dot_api_dot_v1_dot_service__visibility__pb2.ListClosedWorkflowExecutionsRequest.SerializeToString,
            cadence_dot_api_dot_v1_dot_service__visibility__pb2.ListClosedWorkflowExecutionsResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def ListArchivedWorkflowExecutions(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/uber.cadence.api.v1.VisibilityAPI/ListArchivedWorkflowExecutions',
            cadence_dot_api_dot_v1_dot_service__visibility__pb2.ListArchivedWorkflowExecutionsRequest.SerializeToString,
            cadence_dot_api_dot_v1_dot_service__visibility__pb2.ListArchivedWorkflowExecutionsResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def ScanWorkflowExecutions(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/uber.cadence.api.v1.VisibilityAPI/ScanWorkflowExecutions',
            cadence_dot_api_dot_v1_dot_service__visibility__pb2.ScanWorkflowExecutionsRequest.SerializeToString,
            cadence_dot_api_dot_v1_dot_service__visibility__pb2.ScanWorkflowExecutionsResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def CountWorkflowExecutions(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/uber.cadence.api.v1.VisibilityAPI/CountWorkflowExecutions',
            cadence_dot_api_dot_v1_dot_service__visibility__pb2.CountWorkflowExecutionsRequest.SerializeToString,
            cadence_dot_api_dot_v1_dot_service__visibility__pb2.CountWorkflowExecutionsResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetSearchAttributes(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/uber.cadence.api.v1.VisibilityAPI/GetSearchAttributes',
            cadence_dot_api_dot_v1_dot_service__visibility__pb2.GetSearchAttributesRequest.SerializeToString,
            cadence_dot_api_dot_v1_dot_service__visibility__pb2.GetSearchAttributesResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)
